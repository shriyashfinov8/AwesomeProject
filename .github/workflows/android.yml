name: Build and Deploy Android

on:
  workflow_dispatch: # This allows manual triggering
    inputs:
      version_number:
        description: 'Version number'
        required: false
      environment:
        type: choice
        description: 'Environment (dev/sandbox/prod)'
        required: true
        default: 'dev'
        options:
          - DEV
          - SANDBOX
          - PROD

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Fetch the full history so nothing is missing
          token: ${{ secrets.GH_ACCESS_TOKEN }}

      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: '17'

      # Print current working directory
      - name: Print working directory (pwd)
        run: pwd

      # Set up Ruby and Bundler automatically
      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.3.5
          bundler-cache: false

      # - name: Setup fastlane
      #   id: set_up_fastlane
      #   run: |
      #     gem install bundler
      #     bundle config path vendor/bundle
      #     bundle install --jobs 4 --retry 3

      - name: Determine Version Number
        id: get_version
        run: |
          # Get current date in the format YYYY.MM.DD
          date=$(date +'%Y.%m.%d')

          # Calculate the next tag number
          previous_tag=$(git tag --list "$date.*" | sort -r | head -n 1)
          echo $previous_tag
          if [ -n "$previous_tag" ]; then
            last_three_digits=$(echo "$previous_tag" | awk -F '.' '{print $NF}')
            echo $last_three_digits
            incremented_number=$((10#$last_three_digits + 1))
            echo $incremented_number
          else
            incremented_number=1
          fi

          RELEASE_NUMBER="$date.$(printf "%03d" $incremented_number)"
          echo "RELEASE_NUMBER=$RELEASE_NUMBER" >> $GITHUB_ENV
          echo "RELEASE_NUMBER: $RELEASE_NUMBER"
        shell: bash

      - name: Set up environment variables
        id: setup_env
        run: |
          ENV_NAME=${{ github.event.inputs.environment }}  

          # Dynamically construct variable names and fetch values
          API_BASE_URL=$(eval echo "\${{ vars.API_BASE_URL_${ENV_NAME} }}")
          GOOGLE_OAUTH_CLIENT_ID_WEB=$(eval echo "\${{ vars.GOOGLE_OAUTH_CLIENT_ID_WEB_${ENV_NAME} }}")
          GOOGLE_OAUTH_CLIENT_ID_IOS=$(eval echo "\${{ vars.GOOGLE_OAUTH_CLIENT_ID_IOS_${ENV_NAME} }}")
          STRIPE_PUBLISHABLE_KEY=$(eval echo "\${{ vars.STRIPE_PUBLISHABLE_KEY_${ENV_NAME} }}")

          # Append the environment variables to the .env file
          echo "API_BASE_URL=$API_BASE_URL" >> .env
          echo "GOOGLE_OAUTH_CLIENT_ID_WEB=$GOOGLE_OAUTH_CLIENT_ID_WEB" >> .env
          echo "GOOGLE_OAUTH_CLIENT_ID_IOS=$GOOGLE_OAUTH_CLIENT_ID_IOS" >> .env
          echo "STRIPE_PUBLISHABLE_KEY=$STRIPE_PUBLISHABLE_KEY" >> .env

          echo "Printing current working directory"
          pwd
          echo "Printing the .env file"
          ls -la
          cat .env

      # Run Fastlane using the generated JSON key file
      # - name: Build and deploy Android app using Fastlane
      #   run: bundle exec fastlane release_to_play_store --verbose
      #   env:
      #     GH_ACCESS_TOKEN: ${{ secrets.GH_ACCESS_TOKEN }}
      #     VERSION_NUMBER: ${{ github.event.inputs.version_number || '1.0.0' }}
      #     ENVIRONMENT: ${{ github.event.inputs.environment }}
